buildscript {
    ext {
        queryDslVersion = "5.1.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'io.jsonwebtoken:jjwt:0.12.6'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:3.4.5'
    // https://github.com/f4b6a3/uuid-creator
//    implementation 'com.github.rholder.snowflake:1.0.2'

    // QueryDsl
    implementation "com.querydsl:querydsl-apt:$queryDslVersion"
    implementation "com.querydsl:querydsl-core:$queryDslVersion"
    implementation "com.querydsl:querydsl-jpa:$queryDslVersion:jakarta"

    annotationProcessor "com.querydsl:querydsl-apt:$queryDslVersion:jakarta"


    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"

    // mapstruct
    implementation 'org.mapstruct:mapstruct:1.5.3.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Querydsl 설정
def querydslSrcDir = 'src/main/generated'

clean {
    delete file(querydslSrcDir)
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-parameters']
    options.generatedSourceOutputDirectory = file(querydslSrcDir)
    options.annotationProcessorPath = configurations.annotationProcessor
}
